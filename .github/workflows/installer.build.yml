name: Build Installer

on:
  workflow_dispatch:

env:
  BUILD_CONFIG: "Release"
  BUILDNUMBER: ${{github.run_number}}
jobs:
  windows-build:
    name: Build the Ziti Desktop Edge for Windows Installer Package
    runs-on: windows-latest
    env:
      gh_ci_key: ${{ secrets.GH_CI_KEY }}
    defaults:
      run:
        working-directory: ./ziti-edge-ui
    steps: 
      - uses: actions/checkout@v3
      - name: Trying to run choco install.
        run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      - name: "Install Choco needs: advanced-installer nodejs"
        run: choco install advanced-installer nodejs --yes --force 
      - name: Build Electron UI
        run: powershell -File ..\build.ps1
      - name: Upload rpm to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./release-builds/ZitiUI.zip
          asset_name: ZitiUI.zip
          tag: ${{ steps.vars.outputs.text }}
          overwrite: true
          body: ""
  linux-build: 
    name: Build the Ziti Desktop Edge for Linux Deb & Rpm Installer Package
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ziti-edge-ui
    steps: 
      - uses: actions/checkout@v3
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '16.15.0'
      - id: set_vars
        run: |
          content=`cat ./package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
      - run: |
          echo "${{fromJson(steps.set_vars.outputs.text).version}}"
      - run: |
          echo "::set-output name=version::${{fromJson(steps.set_vars.outputs.text).version}}"
      - run: echo ${{ steps.set_vars.version.text }}
        env:
          APPVER: ${{ steps.vars.version.text }}
      - name: Show Version
        run: echo $APPVER
      - run: npm install
      - run: npm i -g electron-builder
      - run: electron-builder --linux deb rpm
      - run: ls -l dist
      - name: Upload Deb to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./ziti-edge-ui/dist/ziti-desktop-edge-${{ steps.vars.outputs.text }}.deb
          asset_name: ziti-desktop-edge-${{ steps.vars.outputs.text }}.deb
          tag: ${{ steps.vars.outputs.text }}
          overwrite: true
          body: ""
      - name: Upload rpm to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./ziti-edge-ui/dist/ziti-desktop-edge-${{ steps.vars.outputs.text }}.rpm
          asset_name: ziti-desktop-edge-${{ steps.vars.outputs.text }}.rpm
          tag: ${{ steps.vars.outputs.text }}
          overwrite: true
          body: ""
