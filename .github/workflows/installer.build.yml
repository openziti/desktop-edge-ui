name: Build Installer

on:
  workflow_dispatch:

env:
  BUILD_CONFIG: "Release"
  BUILDNUMBER: ${{github.run_number}}
jobs:
  windows-build:
    name: Build the Ziti Desktop Edge for Windows Installer Package
    runs-on: windows-latest
    env:
      gh_ci_key: ${{ secrets.GH_CI_KEY }}
    defaults:
      run:
        working-directory: ./ziti-edge-ui
    steps: 
      - uses: actions/checkout@v3
      - uses: pCYSl5EDgo/cat@1.0.1
        id: vars
        with:
          path: ../version      
      - name: Trying to run choco install.
        run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      - name: "Install Choco needs: advanced-installer wixtoolset ninja nodejs"
        run: choco install advanced-installer wixtoolset ninja nodejs --yes --force 
      - name: Setting up version env var
        run: echo "VERSION=$(cat ..\version)" >> $env:GITHUB_ENV
      - name: Build Electron UI
        run: powershell -File ..\build.ps1
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.text }}
          release_name: ${{ steps.vars.outputs.text }}
          draft: false
          prerelease: false
      - run: echo ${{ steps.create_release.outputs.upload_url }}
      - name: Publish Executable
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: ZitiUI.zip
          asset_path: ${{ github.workspace }}\release-builds/ZitiUI.zip
          asset_content_type: application/exe
      - run: echo ./release-build/ZitiUI.zip
  linux-build: 
    name: Build the Ziti Desktop Edge for Linux Deb & Rpm Installer Package
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ziti-edge-ui
    steps: 
      - uses: actions/checkout@v3
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '16.15.0'
      - uses: pCYSl5EDgo/cat@1.0.1
        id: vars
        with:
          path: ./version
      - run: echo ${{ steps.vars.outputs.text }}
        env:
          APPVER: ${{ steps.vars.outputs.text }}
      - name: Show Version
        run: echo $APPVER
      - run: npm install
      - run: npm i -g electron-builder
      - run: electron-builder --linux deb rpm
      - name: Upload Linux Deb installer
        uses: actions/upload-artifact@v2
        with:
          name: ZitiDesktopEdge-Deb-${{ steps.vars.outputs.text }}
          path: "dist/ziti-desktop-edge-${{ steps.vars.outputs.text }}.deb"
      - name: Upload Linux Rpm installer
        uses: actions/upload-artifact@v2
        with:
          name: ZitiDesktopEdge-Rpm-${{ steps.vars.outputs.text }}
          path: "dist/ziti-desktop-edge-${{ steps.vars.outputs.text }}.rpm"
